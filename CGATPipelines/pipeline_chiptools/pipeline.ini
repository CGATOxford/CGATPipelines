######################################################################################################
# Pipeline pipeline_chiptools.py configuration file
#
######################################################################################################
## general options

[general]
database = csvdb

# Specify with a 1 or 0 which tool you require to run, currently homer and deeptools are implimented
homer=1
deeptools=1

######################################################################################################
##                                            Homer                                                 ##
###################################################################################################### 

[homer]

# perl /ifs/apps/bio/homer-4.9//configureHomer.pl -list                                               
# to check  which packages are installed and which are available to download                         
# installed the packages needed before running                                                       
# (e.g.:  perl /ifs/apps/bio/homer-4.9//configureHomer.pl -install hg19)                           

######################################################################################################
# MakeTagDirectory                                                                                   #
# Creating a "Tag Directory" to facilitate the analysis of ChIP-Seq                                  #
######################################################################################################

# Alignment files in one of the following formats: BED, SAM, BAM
# For BAM format, HOMER will use "samtools view file.BAM > file.SAM" to covert to a SAM file
# "samtools" must be available 
# The genome according to the homer is needed to the function "-checkGC"
# You need to make sure that homer has the genome installed (e.g. hg19)
# Genomes that currently installed: hg19, mm10

maketagdir_genome=hg19

######################################################################################################
#                                                                                                    #
# findpeaks: Finding Enriched Peaks, Regions, and Transcripts                                        #
#                                                                                                    #
######################################################################################################

# parameters= histone (broad peaks), factor (sharp) 
# factor: a FIXED width peak size is used; suitable for sharp peaks
# histone: Peak finding for broad regions of enrichment; This analysis finds variable-width peaks
# output for factor: peaks.txt
# output for histone: regions.txt
# could name the output by changing "auto" to <filename.txt> 

findpeaks_style=histone
findpeaks_output=auto
findpeaks_options=

######################################################################################################
# BED-coversion                                                                                      #
# Converting peak files to BED files for uploading peak files to the UCSC Genome Browser             #
######################################################################################################

BED_options=

######################################################################################################
# AnnotatePeaks                                                                                      #
# Annotatinge Regions in the Genome                                                                  #
# Quantifying Data and Motifs and Comparing Peaks/Regions in the Genome                              #
######################################################################################################

# Program (annotatePeak.pl) also contains:
# Associate peaks with nearby genes, Gene Ontology Analysis, genomic feature association analysis (Genome Ontology)
# Associate peaks with gene expression data, calculate ChIP-Seq Tag densities from different experiments
# Find motif occurrences in peaks
# By default, annotatePeaks.pl assigns peaks to the nearest TSS

annotatepeaks_genome=hg19

# getDiffExpression.pl
# Quantifying Differential Features (Enrichment/Expression)
# to report the raw read counts > countTable.txt
# Apply the countTable.tx to find differentially regulated features (output:diffOutput.txt) 


diffannotat_raw=1

annotate_raw_region=tss
annotate_raw_options=-raw
annotate_raw_genome=hg19

######################################################################################################
# motif
# Finding Enriched Motifs in Genomic Regions
######################################################################################################

# parameter for size is mandatory, to know exactly what size of the regions you are analyzing
# Parameters= 200 (default), given (to find motifs using your peaks with their exact sizes)
# For transcription factor (TF) peaks, most of the motifs are found +/- 50-75 bp from the peak center
# so for TF, using a fixed size rather than depend on your peak size is better

motif_genome=hg19
motif_size=200
motif_options=peakAnalysis

######################################################################################################
# diff_expr
# Quantifying Differential Features (Enrichment/Expression)
######################################################################################################

# Fill in the details of samples in the design table (design.tsv)
# Treatment: control/ drug 
# For diff_expr_group example: Mock Mock WNT WNT. This has to be specified in the same order as in the countTable file
diff_expr=1
diff_expr_group=DMSO DMSO J4 J4
diff_expr_options=

######################################################################################################
# getDiffPeaksReplicates
# Identifying peaks from replicates
######################################################################################################
#  Ultimately passes these values to the R/Bioconductor package DESeq2 
#  to calculate enrichment values for each peak
#  Return only peaks that pass a given fold enrichment (default: 2-fold) and FDR cutoff (default 5%)

diff_repeats=0
diff_repeats_options=
diff_repeats_genome=hg19


######################################################################################################
##                                      Deeptools                                                   ##
#  http://deeptools.readthedocs.io/en/latest/index.html#)                                            #
#  deepTools is a suite of python tools particularly developed for the efficient analysis            #
#  of high-throughput sequencing data, such as ChIP-seq, RNA-seq or MNase-seq                        #
#  Input files are indexed Bam files, listed in the file of "design.tsv"                             #
#  All the plot-related funtions, the outputs will be saved in the folder called "Plot.dir"          #
#  Plots are mainly in eps format which could be further edited in Adobe Illustrator.                #
## Functions are specified                                                                          ##
######################################################################################################

[deep]

# Specify which bigwig conversion tools you would like to use for your samples
# options include bamCompare or bamCoverage
# bamCoverage: generate bigwig files from bam files
# banCompare: generate a bigwig file based on two BAM files that are compared to 
# each other while being simultaneously normalized for sequencing depth

bam_compare=1
bam_coverage=0

# is the bam file paired?
paired_end=0

# ignore duplicates for the plotCoverage, plotFingerprint and multiBamSummary
# plotCoverage: to assess the sequencing depth of a given sample
# plotFingerprint: the quality control for ChIP-seq experiments. ChIP samples compared with input.

ignore_dups=1

# minimum mapping quality
# parameter used in plotCoverage and plotFingerprint
# default is 10
mapping_qual=10

########################################################################################################
#                         For PEFragmentSize                                                           #
########################################################################################################
# calculates the fragment sizes for read pairs given a BAM file from paired-end sequencing
# logscale: for plotting in log scale set as 1 or 0
      
logscale=0


########################################################################################################
#                         For  bamCoverage and bamCompare                                              #
# Output file is set as bigwig files; store in the "Bwfiles.dir"                                       #
########################################################################################################
# binsize: defaults are 10 but needs to be set
# this parameter is shared with multiBamSummary
binsize=10

# A list of space-delimited chromosome names containing those chromosomes that should be excluded
# for computing the normalization.
# Useful when considering samples with unequal coverage across chromosomes, like male samples. 
# e.g. chrX chrY.
# please set to None if not required
ignore_norm=chrX chrY

# This parameter allows the extension of reads to fragment size. 
# If set, each read is extended, without exception. NOTE: This feature 
# is generally NOT recommended for spliced-read data, such as RNA-seq, 
# as it would extend reads over skipped regions
# set as 1 (True) or 0 (False)
extendreads=0

# Optional argument in case you would like to add in the command line
bamcoverage_options=

# These are optional bamCompare arguments and are specified as
# you would on the commandline
bamcompare_options=

########################################################################################################
#                         For multiBamSummary and multiBigwigSummary                                   #
########################################################################################################

# multiBamSummary: the read coverages for genomic regions for typically two or more BAM files 
# multiBigWigSummary: the average scores for each of the files, typically two or more, in every genomic region

# mode_setting: choices for bins, BED-file
# default is None (bins) or file (e.g.: ooo.bed)
# bins: Consecutive bins of equal size (10 kilobases by default)
# The bin size (set with bamCoverage)
# Distance between bins can be adjusted
# ignore_Dups was set together with plotCoverage and plotFingerprint

mode_setting=None
summary_options= 

########################################################################################################
#                         For plotCorrelation and plotPCA                                              #
########################################################################################################
# Correlation methods: spearman, pearson
# Plot: plot type; heatmap, scatterplot 
# colormap:e.g.:RdBu_r; check http://matplotlib.org/users/colormaps.html
# Filetype: png, pdf, svg, eps
# plot_options are optional extras to supply, see deeptools documentation

cormethod=spearman
plot=scatterplot
colormap=RdBu
filetype=pdf
plot_options=


######################################################################################################## 
#                         For computeMatrix and plotHeatmap, plotProfile                               #
########################################################################################################
# startfactor: scale-regions, reference-point
# regions= TSS, TES, center; default is TSS.
# region_length used when the startfactor set as scale-regions; default is 1000 
# bedfile: for region (e.g.: xxx.bed)
# out_namematrix: name for the file (.tab; Path of directory needed); a tab file is generated and could put in R
# out_sorted: name for the file (BED; Path of direcotory needed); regions with the sorting order selected

startfactor=reference-point
regions=TSS
region_length=1000 
bedfile=/ifs/mirror/annotations/hg19_ensembl75_hierarchical/gcprofile.bed
# Just the name of what you want the matrix to be called.
out_namematrix=test.tab
out_sorted=test.bed

#########################################################################################################
#                         Advanced arguments for computeMatrix                                          #
#########################################################################################################
# brslength(BeforeRegionStartLength): e.g.:1000
# arslength(AfterRegionStartLength)

brslength=1000
arslength=0
matrix_options=

#########################################################################################################
#                          For plotHeatmap and plotProfile                                              #
#########################################################################################################

# dpi: set the resolution for figures
# legendlocation: best, upper-right, upper-left, upper-center, lower-left, lower-right,
#                 lower-center, center, center-left, center-right, none (does not work for profile)
# refpointlabel: label shown for the reference-point; TSS, TES, center, peak start
# plottype: for plotProfile, options: line or heatmaplines, fill, se, std, overlapped_lines, heatmap 
# pergroup: plots all samples by group of regions 

kmeans=3
dpi=300
legendlocation=upper-left
refpointlabel="center"
plottype=heatmap
pergroup=
