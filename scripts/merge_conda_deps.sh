#!/usr/bin/env bash

# The expected output is a new conda env file merging all conda packages for production pipelines

# Global variables

SCRIPT_NAME="$0"
SCRIPT_OPTS="$@"
SCRIPT_FOLDER=$(dirname $0)
REPO_FOLDER=$(dirname ${SCRIPT_FOLDER})
TMP_ANNOTATIONS=$(mktemp)
TMP_ENRICHMENT=$(mktemp)
TMP_INTERVALS=$(mktemp)
TMP_MAPPING=$(mktemp)
TMP_PEAKCALLING=$(mktemp)
TMP_READQC=$(mktemp)
TMP_RNASEQDE=$(mktemp)
TMP_RNASEQQC=$(mktemp)
TMP_SCRNASEQQC=$(mktemp)
TMP_WINDOWS=$(mktemp)


## auxiliary functions

# function to report issues and exit
report_problem() {
   echo
   echo $1
   echo
   echo " Aborting. "
   exit 1
}


# function to get the relevant package names and versions
process_env_file() {
   egrep -v '^name|^channels|bioconda|conda-forge|defaults|^dependencies|pip|bx-python|#|^prefix|^ ' $1 > $2
}


# function to display help message
help_message() {
   echo
   echo " Takes as input all conda env files for production pipelines on this repo."
   echo
   echo " The output is a new conda env file merging all conda packages for production pipelines."
   echo
   echo " ./merge_conda_deps.sh "
   echo
   exit 1
}


## the script starts here

if [[ $# -ne 0 ]] ; then

   help_message

fi

process_env_file ${REPO_FOLDER}/conda/environments/pipeline-annotations-template.yml ${TMP_ANNOTATIONS}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-enrichment-template.yml ${TMP_ENRICHMENT}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-intervals-template.yml ${TMP_INTERVALS}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-mapping-template.yml ${TMP_MAPPING}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-peakcalling-template.yml ${TMP_PEAKCALLING}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-readqc-template.yml ${TMP_READQC}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-rnaseqde-template.yml ${TMP_RNASEQDE}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-rnaseqqc-template.yml ${TMP_RNASEQQC}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-scrnaseqqc-template.yml ${TMP_SCRNASEQQC}
process_env_file ${REPO_FOLDER}/conda/environments/pipeline-windows-template.yml ${TMP_WINDOWS}

echo
echo "# output generated by ${SCRIPT_NAME} ${SCRIPT_OPTS}"
echo "# on `date`"
echo
echo "name: cgat-p"
echo
echo "channels:"
echo "- bioconda"
echo "- conda-forge"
echo "- defaults"
echo
echo "dependencies:"

sort -u ${TMP_ANNOTATIONS} \
 ${TMP_ENRICHMENT} \
 ${TMP_INTERVALS} \
 ${TMP_MAPPING} \
 ${TMP_PEAKCALLING} \
 ${TMP_READQC} \
 ${TMP_RNASEQDE} \
 ${TMP_RNASEQQC} \
 ${TMP_SCRNASEQQC} \
 ${TMP_WINDOWS}

